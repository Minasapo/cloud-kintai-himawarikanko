# cspell:words cimg lcov
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0

workflows:
  app-workflow:
    jobs:
      - app-test
      - aws-test:
          context:
            - aws
            - test

jobs:
  app-test:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - checkout
      - run: npm install
      - run: make ci-test
      - run: |
          mkdir -p ./reports/eslint/
          make ci-eslint
      - store_test_results:
          path: ./reports/

  aws-test:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - checkout
      - aws-cli/install
      - aws-cli/assume_role_with_web_identity:
          role_arn: ${AWS_ROLE_ARN}
          # role_session_name: "CircleCI-${CIRCLE_WORKFLOW_ID}-${CIRCLE_JOB}"

      # - aws-cli/install
      # - run:
      #     name: connect
      #     command: |
      #       read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN \<<< \
      #         $(aws sts assume-role-with-web-identity \
      #          --role-arn ${AWS_ROLE_ARN} \
      #          --role-session-name "CircleCI-${CIRCLE_WORKFLOW_ID}-${CIRCLE_JOB}" \
      #          --web-identity-token $CIRCLE_OIDC_TOKEN \
      #          --duration-seconds 3600 \
      #          --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
      #          --output text)
      #       export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

      #       echo $TEST_VAR

      #       env

      #       echo 'export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"' >> "$BASH_ENV"
      #       echo 'export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"' >> "$BASH_ENV"
      #       echo 'export AWS_SESSION_TOKEN="${AWS_SESSION_TOKEN}"' >> "$BASH_ENV"

      - run: |
          env

          aws s3 ls
