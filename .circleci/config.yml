# cspell:words cimg lcov
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0
  # snyk: snyk/snyk@1.7.0

workflows:
  app-workflow:
    jobs:
      - app-init:
          context:
            - aws
      - app-init-aws:
          requires:
            - app-init
          context:
            - aws
      - app-init-amplify:
          requires:
            - app-init-aws
          context:
            - aws
      - app-install:
          requires:
            - app-init-amplify
          context:
            - aws
      - app-test-eslint:
          requires:
            - app-install
          context:
            - aws
      - app-test-ut:
          requires:
            - app-install
          context:
            - aws
      - app-test-storybook:
          requires:
            - app-install
          context:
            - aws
      - app-codecov:
          requires:
            - app-test-eslint
            - app-test-ut
          context:
            - aws
      # - app-sast

jobs:
  app-init:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - checkout
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  app-init-aws:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - attach_workspace:
          at: /home/circleci
      - aws-cli/install
      - aws-cli/assume_role_with_web_identity:
          role_arn: ${AWS_ROLE_ARN}
      - run:
          name: Create credentials file
          command: |
            mkdir -p ~/.aws
            cat \<<EOL > ~/.aws/credentials
            [default]
            aws_access_key_id=${AWS_ACCESS_KEY_ID}
            aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}
            aws_session_token=${AWS_SESSION_TOKEN}
            EOL
      - run:
          name: Create config
          command: |
            mkdir -p ~/.aws
            cat \<<EOL > ~/.aws/config
            [profile default]
            region=${AWS_DEFAULT_REGION}
            output=json
            EOL
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .aws

  app-init-amplify:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Install Amplify CLI
          command: npm install -g @aws-amplify/cli
      - run: |
          amplify pull \
            --appId d9rnf7q7x9f9e \
            --envName dev \
            --restore \
            -y
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .aws
            - .amplify

  app-install:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - attach_workspace:
          at: /home/circleci
      - restore_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .aws
            - .amplify

  app-test-eslint:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - attach_workspace:
          at: /home/circleci
      - run: |
          mkdir -p ./reports/eslint/
          make ci-eslint
      - store_test_results:
          path: ./reports/
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project/reports

  app-test-ut:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - attach_workspace:
          at: /home/circleci
      - run: make ci-test
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project/reports

  app-test-storybook:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - attach_workspace:
          at: /home/circleci
      - setup_remote_docker:
          version: 20.10.14
      - run: |
          cp .env.example .env
          make chromatic
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - .aws
            - .amplify

  app-codecov:
    docker:
      - image: cimg/node:18.13.0

    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Codecov
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            ./codecov -t ${CODECOV_TOKEN}

  # app-sast:
  #   docker:
  #     - image: cimg/node:18.13.0

  #   steps:
  #     - checkout
  #     - run: npm install
  #     - snyk/install
  #     - run:
  #         name: Which version of snyk is installed
  #         command: snyk version
  #     - snyk/scan
