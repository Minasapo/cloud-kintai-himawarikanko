/* tslint:disable */
/* eslint-disable */
/**
 * クラウド勤怠システム
 *  社内向けの勤怠管理システムです。 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Attendance
 */
export interface Attendance {
    /**
     * 
     * @type {number}
     * @memberof Attendance
     */
    attendanceId: number;
    /**
     * 
     * @type {number}
     * @memberof Attendance
     */
    parentAttendanceId: number;
    /**
     * 
     * @type {number}
     * @memberof Attendance
     */
    staffId: number;
    /**
     * 
     * @type {Date}
     * @memberof Attendance
     */
    workDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof Attendance
     */
    startTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof Attendance
     */
    endTime: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Attendance
     */
    goDirectlyFlag: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Attendance
     */
    returnDirectlyFlag: boolean;
    /**
     * 
     * @type {string}
     * @memberof Attendance
     */
    remarks: string;
}

/**
 * Check if a given object implements the Attendance interface.
 */
export function instanceOfAttendance(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "attendanceId" in value;
    isInstance = isInstance && "parentAttendanceId" in value;
    isInstance = isInstance && "staffId" in value;
    isInstance = isInstance && "workDate" in value;
    isInstance = isInstance && "startTime" in value;
    isInstance = isInstance && "endTime" in value;
    isInstance = isInstance && "goDirectlyFlag" in value;
    isInstance = isInstance && "returnDirectlyFlag" in value;
    isInstance = isInstance && "remarks" in value;

    return isInstance;
}

export function AttendanceFromJSON(json: any): Attendance {
    return AttendanceFromJSONTyped(json, false);
}

export function AttendanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Attendance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attendanceId': json['attendance_id'],
        'parentAttendanceId': json['parent_attendance_id'],
        'staffId': json['staff_id'],
        'workDate': (new Date(json['work_date'])),
        'startTime': (new Date(json['start_time'])),
        'endTime': (new Date(json['end_time'])),
        'goDirectlyFlag': json['go_directly_flag'],
        'returnDirectlyFlag': json['return_directly_flag'],
        'remarks': json['remarks'],
    };
}

export function AttendanceToJSON(value?: Attendance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attendance_id': value.attendanceId,
        'parent_attendance_id': value.parentAttendanceId,
        'staff_id': value.staffId,
        'work_date': (value.workDate.toISOString().substr(0,10)),
        'start_time': (value.startTime.toISOString()),
        'end_time': (value.endTime.toISOString()),
        'go_directly_flag': value.goDirectlyFlag,
        'return_directly_flag': value.returnDirectlyFlag,
        'remarks': value.remarks,
    };
}

