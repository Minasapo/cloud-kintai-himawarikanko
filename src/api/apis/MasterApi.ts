/* tslint:disable */
/* eslint-disable */
/**
 * クラウド勤怠システム
 *  社内向けの勤怠管理システムです。 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  WorkPeriodPerMonth,
  WorkPeriodPerMonthCreate,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    WorkPeriodPerMonthFromJSON,
    WorkPeriodPerMonthToJSON,
    WorkPeriodPerMonthCreateFromJSON,
    WorkPeriodPerMonthCreateToJSON,
} from '../models/index';

export interface CreateWorkPeriodPerMonthRequest {
    workPeriodPerMonthCreate: WorkPeriodPerMonthCreate;
}

export interface GetWorkPeriodPerMonthListRequest {
    date?: string;
}

/**
 * 
 */
export class MasterApi extends runtime.BaseAPI {

    /**
     * 勤務期間を登録します。
     * 勤務期間を登録
     */
    async createWorkPeriodPerMonthRaw(requestParameters: CreateWorkPeriodPerMonthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WorkPeriodPerMonth>> {
        if (requestParameters.workPeriodPerMonthCreate === null || requestParameters.workPeriodPerMonthCreate === undefined) {
            throw new runtime.RequiredError('workPeriodPerMonthCreate','Required parameter requestParameters.workPeriodPerMonthCreate was null or undefined when calling createWorkPeriodPerMonth.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/master/work_period_per_month`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WorkPeriodPerMonthCreateToJSON(requestParameters.workPeriodPerMonthCreate),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WorkPeriodPerMonthFromJSON(jsonValue));
    }

    /**
     * 勤務期間を登録します。
     * 勤務期間を登録
     */
    async createWorkPeriodPerMonth(requestParameters: CreateWorkPeriodPerMonthRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WorkPeriodPerMonth> {
        const response = await this.createWorkPeriodPerMonthRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 勤務期間一覧を取得します。
     * 勤務期間一覧を取得
     */
    async getWorkPeriodPerMonthListRaw(requestParameters: GetWorkPeriodPerMonthListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WorkPeriodPerMonth>>> {
        const queryParameters: any = {};

        if (requestParameters.date !== undefined) {
            queryParameters['date'] = requestParameters.date;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/master/work_period_per_month`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WorkPeriodPerMonthFromJSON));
    }

    /**
     * 勤務期間一覧を取得します。
     * 勤務期間一覧を取得
     */
    async getWorkPeriodPerMonthList(requestParameters: GetWorkPeriodPerMonthListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WorkPeriodPerMonth>> {
        const response = await this.getWorkPeriodPerMonthListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
